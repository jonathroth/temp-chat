name: Build and Deploy

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.14
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go mod download

    - name: Build
      run: go build -v .

    - name: Install linter
      run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.23.8

    - name: Lint
      run: ./bin/golangci-lint run

    - name: Run All Tests
      run: go test -race -coverprofile=coverage.txt -covermode=atomic -v ./...

  deploy:
    name: Deploy to Heroku
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go mod download

    - name: Login to Heroku
      uses: actions/heroku@master
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      with:
        args: container:login

    - name: Build & Push container to Heroku
      uses: actions/heroku@master
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}
      with:
        args: container:push --recursive --context-path .

    - name: Release to Heroku Dyno
      uses: actions/heroku@master
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        HEROKU_APP: ${{ secrets.HEROKU_APP }}
      with:
        args: container:release worker